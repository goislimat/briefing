type User {
  _id: String!
  active: Boolean
  company: String
  email: String!
  name: String!
  password: String
  passwordSet: Boolean
  role: Role
  briefings: [Briefing]
}

enum Role {
  ADMIN
  USER
}

type Query {
  isAuthenticated: Boolean
  isAdmin: Boolean
  currentUser: User
  user(email: String): User
  users: [User]
}

type Mutation {
  createUser(company: String!, email: String!, name: String!, role: Role): User
  updateUser(
    _id: String!
    company: String!
    email: String!
    name: String!
  ): User
  removeUser(_id: String!): Boolean
  setPassword(
    email: String!
    password: String!
    passwordConfirmation: String!
  ): User
  changeUserBlockStatus(_id: String!, active: Boolean!): User
  resetPassword(_id: String!): User
  manageBriefings(_id: String!, briefings: [String!]): User
}
